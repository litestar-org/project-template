[tool.poetry]
name = "project-template"
version = "1.0.0"
description = ""
authors = []
maintainers = []
license = "MIT"
keywords = ["starlite"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
]
include = ["CHANGELOG.md"]
packages = [
    { include = "src" },
]

[tool.poetry.dependencies]
python = ">=3.8, <4.0"

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pre-commit = "*"
mkdocs-gen-files = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pylint.MESSAGE_CONTROL]
disable = [
    "line-too-long",
    "missing-class-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
]
enable = "useless-suppression"
extension-pkg-allow-list = ["pydantic"]

[tool.pylint.REPORTS]
reports = "no"

[tool.pylint.FORMAT]
max-line-length = "120"

[tool.pylint.VARIABLES]
ignored-argument-names = "args|kwargs|_|__"

[tool.pylint.BASIC]
good-names = "_,__,i,e"
no-docstring-rgx="(__.*__|main|test.*|.*test|.*Test|^_.*)$"

[tool.coverage.run]
omit = ["*/tests/*"]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.pycln]
all = true

[tool.pyright]
include = ["src", "tests"]
exclude = []

[tool.slotscheck]
strict-imports = false

[tool.pydocstyle]
add-ignore = "D100,D104,D105,D106,D202,D205,D415"
add-select = "D401,D404,D417"
convention = "google"
match_dir = "src"
